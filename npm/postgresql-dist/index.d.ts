export function clusterdb(...args: string[]): SpawnSyncReturns<Buffer>;
export function createdb(...args: string[]): SpawnSyncReturns<Buffer>;
export function createuser(...args: string[]): SpawnSyncReturns<Buffer>;
export function dropdb(...args: string[]): SpawnSyncReturns<Buffer>;
export function dropuser(...args: string[]): SpawnSyncReturns<Buffer>;
export function ecpg(...args: string[]): SpawnSyncReturns<Buffer>;
export function initdb(...args: string[]): SpawnSyncReturns<Buffer>;
export function oid2name(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_amcheck(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_archivecleanup(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_basebackup(...args: string[]): SpawnSyncReturns<Buffer>;
export function pgbench(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_checksums(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_config(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_controldata(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_ctl(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_dump(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_dumpall(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_isready(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_receivewal(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_recvlogical(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_resetwal(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_restore(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_rewind(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_test_fsync(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_test_timing(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_upgrade(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_verifybackup(...args: string[]): SpawnSyncReturns<Buffer>;
export function pg_waldump(...args: string[]): SpawnSyncReturns<Buffer>;
export function psql(...args: string[]): SpawnSyncReturns<Buffer>;
export function reindexdb(...args: string[]): SpawnSyncReturns<Buffer>;
export function vacuumdb(...args: string[]): SpawnSyncReturns<Buffer>;
export function vacuumlo(...args: string[]): SpawnSyncReturns<Buffer>;
export function postgres(dataDir: string): import("node:child_process").ChildProcessWithoutNullStreams;
declare function _default(_config?: Config): Promise<{
    config: {
        password?: string | undefined;
        auth: string;
        user: string;
        initdbFlags: string[];
        databaseDir: string;
        listen_addresses: string;
        additionalConfig: string;
    };
    process: any;
    socketDir: string;
    connectionString: string;
    stop: () => Promise<any>;
    fastStop: () => Promise<any>;
    immediateStop: () => Promise<any>;
}>;
export default _default;
export type SpawnSyncReturns<T extends Buffer> = import("node:child_process").SpawnSyncReturns<T>;
export type Config = {
    password?: string;
    auth?: string;
    user?: string;
    initdbFlags?: string[];
    databaseDir?: string;
    listen_addresses?: string;
    additionalConfig?: string;
};
export type Instance = {
    config: Config;
    process: import("node:child_process").ChildProcessWithoutNullStreams;
    socketDir: string;
    connectionString: string;
    stop: () => Promise<any>;
    fastStop: () => Promise<any>;
    immediateStop: () => Promise<any>;
};
